// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oogarts.Server.Data;

#nullable disable

namespace Oogarts.Server.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20231026115011_ExtraArtsen")]
    partial class ExtraArtsen
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArtsSpecialisatie", b =>
                {
                    b.Property<Guid>("ArtsenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SpecialisatiesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ArtsenId", "SpecialisatiesId");

                    b.HasIndex("SpecialisatiesId");

                    b.ToTable("ArtsSpecialisatie");

                    b.HasData(
                        new
                        {
                            ArtsenId = new Guid("deb6f925-af43-4cfa-9f41-54e4a32d64b9"),
                            SpecialisatiesId = new Guid("f12b975a-a3a7-4f42-aea6-56370ec2e9ca")
                        });
                });

            modelBuilder.Entity("Oogarts.Server.Models.Afspraak", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Afspraken");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Arts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GebruikerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId")
                        .IsUnique();

                    b.ToTable("Artsen");

                    b.HasData(
                        new
                        {
                            Id = new Guid("deb6f925-af43-4cfa-9f41-54e4a32d64b9"),
                            GebruikerId = new Guid("9c7a3771-8c68-49e8-b0b2-f06a63b05ba0"),
                            ProfilePicture = "https://www.isala.nl/media/21457/tyljwm.jpg?center=0.5431%2c0.5117&mode=crop&width=200&height=200&quality=80&token=XzIQb4Q6IY"
                        },
                        new
                        {
                            Id = new Guid("22c293e3-265b-4795-8437-5a5ae58906de"),
                            GebruikerId = new Guid("9cfb0f29-a25f-40c2-8da9-19c1d48edfa0"),
                            ProfilePicture = "https://www.isala.nl/media/21457/tyljwm.jpg?center=0.5431%2c0.5117&mode=crop&width=200&height=200&quality=80&token=XzIQb4Q6IY"
                        },
                        new
                        {
                            Id = new Guid("b5df4e82-8246-4d0a-8282-0c75f8504963"),
                            GebruikerId = new Guid("3a230ce2-c499-466a-bd07-6b1d9ae42dbf"),
                            ProfilePicture = "https://www.isala.nl/media/21457/tyljwm.jpg?center=0.5431%2c0.5117&mode=crop&width=200&height=200&quality=80&token=XzIQb4Q6IY"
                        });
                });

            modelBuilder.Entity("Oogarts.Server.Models.Gebruiker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gebruikers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c7a3771-8c68-49e8-b0b2-f06a63b05ba0"),
                            Naam = "Artsnaam",
                            Voornaam = "Artsachternaam"
                        },
                        new
                        {
                            Id = new Guid("9cfb0f29-a25f-40c2-8da9-19c1d48edfa0"),
                            Naam = "Artsnaam2",
                            Voornaam = "Artsvoornaam2"
                        },
                        new
                        {
                            Id = new Guid("3a230ce2-c499-466a-bd07-6b1d9ae42dbf"),
                            Naam = "Artsnaam3",
                            Voornaam = "Artsvoornaam3"
                        },
                        new
                        {
                            Id = new Guid("d3b49690-2e93-4e61-a9dd-704f27bc21c4"),
                            Naam = "Artsnaam4",
                            Voornaam = "Artsvoornaam4"
                        },
                        new
                        {
                            Id = new Guid("c2f00842-25b5-4b92-9ab8-3345b1156e1c"),
                            Naam = "Artsnaam5",
                            Voornaam = "Artsvoornaam5"
                        },
                        new
                        {
                            Id = new Guid("39bd34c7-5647-4e6f-80b7-e94a24831c0a"),
                            Naam = "Secretatiaatvoornaam",
                            Voornaam = "Secretatiaatachternaam"
                        },
                        new
                        {
                            Id = new Guid("13c655a6-7015-4468-bebc-51f5e52bd5b3"),
                            Naam = "Patientvoornaam",
                            Voornaam = "Patientachternaam"
                        });
                });

            modelBuilder.Entity("Oogarts.Server.Models.Oogziekte", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Oogziektes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc4a1bb3-c29b-4323-bede-dc6dbc585b13"),
                            Beschrijving = "beschrijving 1",
                            Titel = "oogziekte 1"
                        },
                        new
                        {
                            Id = new Guid("c831929f-d994-401e-be19-0baa4af5b141"),
                            Beschrijving = "beschrijving 2",
                            Titel = "oogziekte 2"
                        });
                });

            modelBuilder.Entity("Oogarts.Server.Models.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GebruikerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Huisnummer")
                        .HasColumnType("int");

                    b.Property<int>("Postcode")
                        .HasColumnType("int");

                    b.Property<string>("Stad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Straat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId")
                        .IsUnique();

                    b.ToTable("Patienten");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1eb07bb5-a065-43de-b45f-2690478f221f"),
                            GeboorteDatum = new DateTime(2002, 10, 31, 13, 50, 11, 642, DateTimeKind.Local).AddTicks(1854),
                            GebruikerId = new Guid("13c655a6-7015-4468-bebc-51f5e52bd5b3"),
                            Huisnummer = 12,
                            Postcode = 9000,
                            Stad = "Gent",
                            Straat = "Langestraat"
                        });
                });

            modelBuilder.Entity("Oogarts.Server.Models.Secretariaat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GebruikerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId")
                        .IsUnique();

                    b.ToTable("Secretatiaten");

                    b.HasData(
                        new
                        {
                            Id = new Guid("333feb88-bacc-46f4-b082-419ad4c90355"),
                            GebruikerId = new Guid("39bd34c7-5647-4e6f-80b7-e94a24831c0a")
                        });
                });

            modelBuilder.Entity("Oogarts.Server.Models.Specialisatie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specialisatie");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f12b975a-a3a7-4f42-aea6-56370ec2e9ca"),
                            Naam = "Specialisatie 1"
                        });
                });

            modelBuilder.Entity("ArtsSpecialisatie", b =>
                {
                    b.HasOne("Oogarts.Server.Models.Arts", null)
                        .WithMany()
                        .HasForeignKey("ArtsenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oogarts.Server.Models.Specialisatie", null)
                        .WithMany()
                        .HasForeignKey("SpecialisatiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Oogarts.Server.Models.Afspraak", b =>
                {
                    b.HasOne("Oogarts.Server.Models.Arts", "Arts")
                        .WithMany("Afspraken")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Oogarts.Server.Models.Patient", "Patient")
                        .WithMany("Afspraken")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Arts");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Arts", b =>
                {
                    b.HasOne("Oogarts.Server.Models.Gebruiker", "Gebruiker")
                        .WithOne("Arts")
                        .HasForeignKey("Oogarts.Server.Models.Arts", "GebruikerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Patient", b =>
                {
                    b.HasOne("Oogarts.Server.Models.Gebruiker", "Gebruiker")
                        .WithOne("Patient")
                        .HasForeignKey("Oogarts.Server.Models.Patient", "GebruikerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Secretariaat", b =>
                {
                    b.HasOne("Oogarts.Server.Models.Gebruiker", "Gebruiker")
                        .WithOne("Secretariaat")
                        .HasForeignKey("Oogarts.Server.Models.Secretariaat", "GebruikerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Arts", b =>
                {
                    b.Navigation("Afspraken");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Gebruiker", b =>
                {
                    b.Navigation("Arts");

                    b.Navigation("Patient");

                    b.Navigation("Secretariaat");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Patient", b =>
                {
                    b.Navigation("Afspraken");
                });
#pragma warning restore 612, 618
        }
    }
}
