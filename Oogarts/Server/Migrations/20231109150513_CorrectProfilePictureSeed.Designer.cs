// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oogarts.Server.Data;

#nullable disable

namespace Oogarts.Server.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20231109150513_CorrectProfilePictureSeed")]
    partial class CorrectProfilePictureSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArtsSpecialisatie", b =>
                {
                    b.Property<Guid>("ArtsenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SpecialisatiesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ArtsenId", "SpecialisatiesId");

                    b.HasIndex("SpecialisatiesId");

                    b.ToTable("ArtsSpecialisatie");

                    b.HasData(
                        new
                        {
                            ArtsenId = new Guid("eca11ebe-9b41-4358-8a76-f6e6fb098efd"),
                            SpecialisatiesId = new Guid("2077132a-131b-4e2d-91b7-6b7517a4eb31")
                        });
                });

            modelBuilder.Entity("Oogarts.Server.Models.Afspraak", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Afspraken");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Arts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GebruikerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId")
                        .IsUnique();

                    b.ToTable("Artsen");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eca11ebe-9b41-4358-8a76-f6e6fb098efd"),
                            GebruikerId = new Guid("b6498338-b7e4-488c-ba6c-60f0f5c9afb0"),
                            ProfilePicture = "img/arts.png"
                        },
                        new
                        {
                            Id = new Guid("683930b8-1735-4b11-a1a9-75f94e75fbe3"),
                            GebruikerId = new Guid("16db267a-ddef-4466-a531-c856788ab5d8"),
                            ProfilePicture = "img/arts.png"
                        },
                        new
                        {
                            Id = new Guid("ac18a46e-ac62-48e5-a1f0-9168087ebc02"),
                            GebruikerId = new Guid("971b17b8-1f91-41d0-9307-63d7e2c62a9c"),
                            ProfilePicture = "img/arts.png"
                        },
                        new
                        {
                            Id = new Guid("765f7ea8-3b1f-4599-8ce7-cd9b4e12778e"),
                            GebruikerId = new Guid("f604c4eb-6797-4b9e-81f8-49651bcdbca4"),
                            ProfilePicture = "img/arts.png"
                        },
                        new
                        {
                            Id = new Guid("29af1fc5-f61a-497a-9d8c-609aeabb6a42"),
                            GebruikerId = new Guid("f9e83a2c-b4c3-4ad9-875e-9f419c20ced6"),
                            ProfilePicture = "img/arts.png"
                        });
                });

            modelBuilder.Entity("Oogarts.Server.Models.Gebruiker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gebruikers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b6498338-b7e4-488c-ba6c-60f0f5c9afb0"),
                            Naam = "Artsnaam",
                            Voornaam = "Artsachternaam"
                        },
                        new
                        {
                            Id = new Guid("16db267a-ddef-4466-a531-c856788ab5d8"),
                            Naam = "Artsnaam2",
                            Voornaam = "Artsvoornaam2"
                        },
                        new
                        {
                            Id = new Guid("971b17b8-1f91-41d0-9307-63d7e2c62a9c"),
                            Naam = "Artsnaam3",
                            Voornaam = "Artsvoornaam3"
                        },
                        new
                        {
                            Id = new Guid("f604c4eb-6797-4b9e-81f8-49651bcdbca4"),
                            Naam = "Artsnaam4",
                            Voornaam = "Artsvoornaam4"
                        },
                        new
                        {
                            Id = new Guid("f9e83a2c-b4c3-4ad9-875e-9f419c20ced6"),
                            Naam = "Artsnaam5",
                            Voornaam = "Artsvoornaam5"
                        },
                        new
                        {
                            Id = new Guid("4745d39b-5b45-4255-b142-ea9d5aad5afe"),
                            Naam = "Secretatiaatvoornaam",
                            Voornaam = "Secretatiaatachternaam"
                        },
                        new
                        {
                            Id = new Guid("5e6d3a96-65cb-45e7-ae61-af22f1bad4bf"),
                            Naam = "Patientvoornaam",
                            Voornaam = "Patientachternaam"
                        });
                });

            modelBuilder.Entity("Oogarts.Server.Models.Oogziekte", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Oogziektes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9717f883-ebc5-4eba-9c50-e11beddda7b6"),
                            Beschrijving = "beschrijving 1",
                            Titel = "oogziekte 1"
                        },
                        new
                        {
                            Id = new Guid("93536244-c373-4442-920f-c29cf6af1144"),
                            Beschrijving = "beschrijving 2",
                            Titel = "oogziekte 2"
                        });
                });

            modelBuilder.Entity("Oogarts.Server.Models.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GebruikerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Huisnummer")
                        .HasColumnType("int");

                    b.Property<int>("Postcode")
                        .HasColumnType("int");

                    b.Property<string>("Stad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Straat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId")
                        .IsUnique();

                    b.ToTable("Patienten");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9904dfc7-91a1-48ad-bbd1-22cc167bf311"),
                            GeboorteDatum = new DateTime(2002, 11, 14, 16, 5, 13, 187, DateTimeKind.Local).AddTicks(768),
                            GebruikerId = new Guid("5e6d3a96-65cb-45e7-ae61-af22f1bad4bf"),
                            Huisnummer = 12,
                            Postcode = 9000,
                            Stad = "Gent",
                            Straat = "Langestraat"
                        });
                });

            modelBuilder.Entity("Oogarts.Server.Models.Secretariaat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GebruikerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId")
                        .IsUnique();

                    b.ToTable("Secretatiaten");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dbaf0500-c447-41b5-847e-f2760ff4a9ce"),
                            GebruikerId = new Guid("4745d39b-5b45-4255-b142-ea9d5aad5afe"),
                            ProfilePicture = "img/secretatiaat.png"
                        });
                });

            modelBuilder.Entity("Oogarts.Server.Models.Specialisatie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specialisatie");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2077132a-131b-4e2d-91b7-6b7517a4eb31"),
                            Naam = "Specialisatie 1"
                        });
                });

            modelBuilder.Entity("ArtsSpecialisatie", b =>
                {
                    b.HasOne("Oogarts.Server.Models.Arts", null)
                        .WithMany()
                        .HasForeignKey("ArtsenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oogarts.Server.Models.Specialisatie", null)
                        .WithMany()
                        .HasForeignKey("SpecialisatiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Oogarts.Server.Models.Afspraak", b =>
                {
                    b.HasOne("Oogarts.Server.Models.Arts", "Arts")
                        .WithMany("Afspraken")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Oogarts.Server.Models.Patient", "Patient")
                        .WithMany("Afspraken")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Arts");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Arts", b =>
                {
                    b.HasOne("Oogarts.Server.Models.Gebruiker", "Gebruiker")
                        .WithOne("Arts")
                        .HasForeignKey("Oogarts.Server.Models.Arts", "GebruikerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Patient", b =>
                {
                    b.HasOne("Oogarts.Server.Models.Gebruiker", "Gebruiker")
                        .WithOne("Patient")
                        .HasForeignKey("Oogarts.Server.Models.Patient", "GebruikerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Secretariaat", b =>
                {
                    b.HasOne("Oogarts.Server.Models.Gebruiker", "Gebruiker")
                        .WithOne("Secretariaat")
                        .HasForeignKey("Oogarts.Server.Models.Secretariaat", "GebruikerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Arts", b =>
                {
                    b.Navigation("Afspraken");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Gebruiker", b =>
                {
                    b.Navigation("Arts");

                    b.Navigation("Patient");

                    b.Navigation("Secretariaat");
                });

            modelBuilder.Entity("Oogarts.Server.Models.Patient", b =>
                {
                    b.Navigation("Afspraken");
                });
#pragma warning restore 612, 618
        }
    }
}
